//扩展库发布工具
import console
import fsys;
import string.template;
import fsys.tar;
import web.json;
import sevenZip.lzma;
import System.IO.Compression.ZipFile;


var ZipFile = System.IO.Compression.ZipFile;

::DEBUG = true;

io.open()
setupCode = /*
import fsys; 
fsys.createDir("~\lib\${LIBDIR}");
fsys.copy( "\${FILENAME}","~\lib\${LIBDIR}" ); 
${LOADPRIVATEFONT}

import ide;
ide.refreshStdLib();

import win;
win.msgboxTimeout("${LIBNAME} 扩展库已安装成功!","aardio- ${LIBNAME}扩展库安装程序")
*/

var tmpPath = "\.temp";
var baseUrl = "http://git.pygrower.cn/kanadeblisst/aardio-extlibs";

var getLibInfo = function(libpath){
	var code = string.load(libpath);
	var s = string.match(code, "libInfo = (\{[\s\S]+?\})");
	var libInfo = {
    	"version": "1.0.0.1",
    	"author": "kanadeblisst",
    	"description": "...",
    	"weight": 1
	}
	if(s){
		libInfo = eval(s);
		if(!libInfo["weight"]) libInfo["weight"] = 1;
	}
	return libInfo;
}



var packLib = function(libname){ 
	console.log("正在打包库: ", libname);
    var libpath,libdir = io.libpath(libname);
    console.log(libpath,libdir)
    
    var libInfo = getLibInfo(libpath);
    
    var setupFile;
    var libfilename = fsys.getFileName(libpath);
    
    if( libfilename == "_.aardio" ){ 
        libfilename = fsys.getFileName(libdir)
        libpath = libdir;
        libdir = fsys.getParentDir(libdir);..io.print(libpath)
        setupFile = ..io.exist( ..fsys.joinpath(libpath,"setup.dl.aardio") );
    } 
	// 获取/lib/下的相对路径
    libdir = fsys.path.relative(libdir,"/lib/",false);
    var libTmpPath = tmpPath + "\" + libname;
    fsys.createDir(libTmpPath);
    fsys.copy(libpath,libTmpPath);
    var tarFilePath = "\dist\package\"+ libname + ".tar";
    if( ! setupFile ){
    	var tmp = string.template(setupCode)
    	var setupCode = tmp.format(
        	LIBNAME = libname;
        	LIBDIR = libdir;
        	FILENAME = libfilename;
        	LOADPRIVATEFONT = "";
    	)
    	string.save(io.joinpath(libTmpPath,"setup.dl.aardio"),setupCode )
    }
    
    ..fsys.delete(tarFilePath);
    var tarFile = fsys.tar(tarFilePath);
    tarFile.pack(libTmpPath,,false)
    tarFile.close();

	sevenZip.lzma.encodeFile(tarFilePath,tarFilePath+".lzma");
	fsys.delete(libTmpPath);
   	fsys.delete(tarFilePath);  
   	console.log("已打包完成，路径: ", tarFilePath+".lzma");
   	libInfo["url"] = "http://git.pygrower.cn/kanadeblisst/aardio-extlibs/raw/branch/master/dist/package/" + libname + ".tar.lzma";
   	return libInfo;
}

var packSamples = function(libInfos){
	import win;
	
	fsys.enum( "\res", "*.*",function(dir,filename,fullpath,findData){ 
		if(filename) return;
		console.log("正在打包库案例，库: ", dir)
		var zipPath = io.fullpath("/dist/samples/"+dir+".zip");
		fsys.delete(zipPath);
		win.delay(100)
		ZipFile.CreateFromDirectory (
			fullpath,
			zipPath,
			0,false )
		var sampleInfo = {
    		"version": libInfos[dir]["version"],
    		"zipUrl": "http://git.pygrower.cn/kanadeblisst/aardio-extlibs/raw/branch/master/dist/samples/" + dir + ".zip"
		}
		string.save("/dist/samples/"+dir+".json", ..web.json.stringify(sampleInfo,true));
	},false);
	console.log("打包案例完成 ")
}


var main = function(){
	fsys.delete(tmpPath);
	fsys.createDir(tmpPath);
	fsys.createDir("\dist\package");
	fsys.createDir("\dist\samples");
	var libInfos = {};
	fsys.enum( "\lib", "*.*",function(dir,filename,fullpath,findData){ 
		if(filename == "config.aardio") return;
		if(dir == "fonts") return ;
		
		var libname = filename ? string.slice(filename,1,-8,true) : dir;
		libInfos[libname] = packLib(libname);
	},false);
	fsys.delete(tmpPath);
	string.save("\dist\exlibs.json", ..web.json.stringify(libInfos,true));
	packSamples(libInfos);
}

main()


console.pause(true)